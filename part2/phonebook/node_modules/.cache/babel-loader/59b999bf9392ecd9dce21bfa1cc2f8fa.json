{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Faeze\\\\my-app\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    onClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\n\nconst Statistic = _ref2 => {\n  let {\n    text,\n    type\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this), \": \", type, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = Statistic;\n\nconst App = () => {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const avrage = (good, neutral, bad, all) => {\n    if (all !== 0) {\n      return goos * 1 + neutral * 0 + bad * -1 / all;\n    } else {\n      return 0;\n    }\n  };\n\n  const positive = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Feedback here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setGood(good + 1),\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setNeutral(neutral + 1),\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"Good\",\n        type: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"neutral\",\n        type: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"bad\",\n        type: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"All\",\n        type: good + neutral + bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"avrage\",\n        type: avrage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n        text: \"positive\",\n        type: positive()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistic\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/Faeze/my-app/my-app/src/App.js"],"names":["React","useState","Button","onClick","text","Statistic","type","App","good","setGood","neutral","setNeutral","bad","setBad","avrage","all","goos","positive"],"mappings":"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","sourcesContent":["\nimport React, { useState } from \"react\";\n\n\n  const Button = ({ onClick, text }) => (\n    <button onClick={onClick}>\n      {text}\n    </button>\n  )\n  const Statistic=({text,type})=>(\n      <div><b>{text}</b>: {type} </div>\n  )\n  \nconst App = () => {\n  \n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const avrage=(good, neutral,bad, all)=>{\n    if(all !==0){\n      return (goos*1) + (neutral*0) + (bad*-1) /all \n    }\n    else{\n      return 0;\n    }\n  }\n  const positive=()=>{\n    \n  }\n  return (\n    <div>\n      <h1>Feedback here</h1>\n      <Button onClick={() => setGood(good + 1)}\n        text='Good'\n      />\n          <Button onClick={() => setNeutral(neutral + 1)}\n        text='Neutral'\n      />\n          <Button onClick={() => setBad(bad + 1)}\n        text='bad'\n      />\n      <div>\n        <h1>Statistics</h1>\n        <Statistic text=\"Good\" type={good}/>\n        <Statistic text=\"neutral\" type={neutral}/>\n        <Statistic text=\"bad\" type={bad}/>\n        <Statistic text=\"All\" type={good + neutral + bad}/>\n        <Statistic text=\"avrage\" type={avrage()}/>\n        <Statistic text=\"positive\" type={positive()}/>\n      </div>\n\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}