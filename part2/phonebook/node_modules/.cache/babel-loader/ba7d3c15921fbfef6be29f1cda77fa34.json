{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Faeze\\\\my-app\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    name: 'Arto Hellas',\n    id: 1\n  }]);\n  const [newName, setNewName] = useState('');\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const addName = event => {\n    event.preventDefault();\n    const nameObject = {\n      name: newName,\n      id: persons.length + 1\n    };\n    setPersons(persons.concat(nameObject));\n    setNewName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addName,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleNoteChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: persons.map(person => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: person.name\n      }, person.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"neauTUzTDwW4kZyoENMJfP1l46w=\");\n\n_c = App;\nexport default App; // const App = (props) => {\n//   //console.log(props.notes)\n//   const [notes, setNotes] = useState(props.notes)\n//   const [newNote, setNewNote] = useState('')\n//   const [showAll, setShowAll] = useState(true)\n//   const notesToShow = showAll\n//   ? notes\n//   : notes.filter(note => note.important)\n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const noteObject = {\n//       content: newNote,\n//       date: new Date().toISOString(),\n//       important: Math.random() < 0.5,\n//       id: notes.length + 1,\n//     }\n//     setNotes(notes.concat(noteObject))\n//     setNewNote('')\n//   }\n// const handleNoteChange=(event)=>{\n//   console.log(event.target.value)\n//   setNewNote(event.target.value)\n// }\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       <div>\n//         <button onClick={() => setShowAll(!showAll)}>\n//           show {showAll ? 'important' : 'all' }\n//         </button>\n//       </div>\n//       <ul>\n//       {notesToShow.map(note =>\n//           <Note key={note.id} note={note} />\n//         )}\n//       </ul>\n//       <form onSubmit={addNote}>\n//         <input value={newNote}  onChange={handleNoteChange}/>\n//         <button type=\"submit\" >save</button>\n//       </form>   \n//     </div>\n//   )\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Faeze/my-app/my-app/src/App.js"],"names":["React","useState","App","persons","setPersons","name","id","newName","setNewName","handleNoteChange","event","console","log","target","value","addName","preventDefault","nameObject","length","concat","map","person"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BH,QAAQ,CAAC,CACvC;AAAEI,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,EAAE,EAAC;AAA1B,GADuC,CAAD,CAAxC;AAGA,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMQ,gBAAgB,GAAEC,KAAD,IAAS;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAN,IAAAA,UAAU,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD;;AAIA,QAAMC,OAAO,GAAIL,KAAD,IAAW;AACrBA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBZ,MAAAA,IAAI,EAAEE,OADW;AAEjBD,MAAAA,EAAE,EAAEH,OAAO,CAACe,MAAR,GAAiB;AAFJ,KAAnB;AAKAd,IAAAA,UAAU,CAACD,OAAO,CAACgB,MAAR,CAAeF,UAAf,CAAD,CAAV;AACAT,IAAAA,UAAU,CAAC,EAAD,CAAV;AACA,GATN;;AAUA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,QAAQ,EAAEO,OAAhB;AAAA,8BACE;AAAA,0CACQ;AAAQ,UAAA,QAAQ,EAAEN;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,gBACGN,OAAO,CAACiB,GAAR,CAAYC,MAAM,iBAAG;AAAA,kBAAqBA,MAAM,CAAChB;AAA5B,SAASgB,MAAM,CAACf,EAAhB;AAAA;AAAA;AAAA;AAAA,cAArB;AADH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArCD;;GAAMJ,G;;KAAAA,G;AAuCN,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\nimport React, { useState } from 'react'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([\n    { name: 'Arto Hellas' ,id:1}\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const handleNoteChange=(event)=>{\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const addName = (event) => {\n        event.preventDefault()\n        const nameObject = {\n          name: newName,\n          id: persons.length + 1,\n        }\n      \n        setPersons(persons.concat(nameObject))\n        setNewName('')\n       }\n  return (\n    <div>\n      <h2>Phonebook</h2>\n \n      <form onSubmit={addName} >\n        <div>\n          name: <input  onChange={handleNoteChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <ul>\n        {persons.map(person =><li key={person.id}>{person.name}</li>)}\n      </ul>\n    </div>\n  )\n}\n\nexport default App\n\n// const App = (props) => {\n//   //console.log(props.notes)\n//   const [notes, setNotes] = useState(props.notes)\n//   const [newNote, setNewNote] = useState('')\n//   const [showAll, setShowAll] = useState(true)\n\n//   const notesToShow = showAll\n//   ? notes\n//   : notes.filter(note => note.important)\n  \n//   const addNote = (event) => {\n//     event.preventDefault()\n//     const noteObject = {\n//       content: newNote,\n//       date: new Date().toISOString(),\n//       important: Math.random() < 0.5,\n//       id: notes.length + 1,\n//     }\n  \n//     setNotes(notes.concat(noteObject))\n//     setNewNote('')\n//   }\n// const handleNoteChange=(event)=>{\n//   console.log(event.target.value)\n//   setNewNote(event.target.value)\n// }\n//   return (\n//     <div>\n//       <h1>Notes</h1>\n//       <div>\n//         <button onClick={() => setShowAll(!showAll)}>\n//           show {showAll ? 'important' : 'all' }\n//         </button>\n//       </div>\n//       <ul>\n//       {notesToShow.map(note =>\n//           <Note key={note.id} note={note} />\n//         )}\n//       </ul>\n//       <form onSubmit={addNote}>\n//         <input value={newNote}  onChange={handleNoteChange}/>\n//         <button type=\"submit\" >save</button>\n//       </form>   \n//     </div>\n//   )\n// }\n\n"]},"metadata":{},"sourceType":"module"}