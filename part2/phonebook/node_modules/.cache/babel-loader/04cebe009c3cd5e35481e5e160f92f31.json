{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Faeze\\\\my-app\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // const App = () => {\n//   const [ persons, setPersons ] = useState([\n//     { name: 'Arto Hellas' , id:1}\n//   ]) \n//   const [ newName, setNewName ] = useState('')\n//   const handleNoteChange=(event)=>{\n//     console.log(event.target.value)\n//     setNewName(event.target.value)\n//   }\n//   const addName = (event) => {\n//         event.preventDefault()\n//         const nameObject = {\n//           name: newName,\n//           id: persons.length + 1,\n//         }\n//         setPersons(persons.concat(nameObject))\n//         setNewName('')\n//        }\n//   return (\n//     <div>\n//       <h2>Phonebook</h2>\n//       <form onSubmit={addName} >\n//         <div>\n//           name: <input  onChange={handleNoteChange}/>\n//         </div>\n//         <div>\n//           <button type=\"submit\">add</button>\n//         </div>\n//       </form>\n//       <h2>Numbers</h2>\n//       <ul>\n//         {persons.map(person =><li key={person.id}>{person.name}</li>)}\n//       </ul>\n//     </div>\n//   )\n// }\n//export default App\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  //console.log(props.notes)\n  const [notes, setNotes] = useState(props.notes);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rzmzPIteH+h+YzvzRDDoRPo0RrE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Faeze/my-app/my-app/src/App.js"],"names":["React","useState","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notesToShow","filter","note","important","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","Math","random","id","length","concat","handleNoteChange","console","log","target","value","map"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,KAAK,CAACC,KAAP,CAAlC;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAD,CAAtC;AAEA,QAAMS,WAAW,GAAGF,OAAO,GACzBJ,KADyB,GAEzBA,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAFF;;AAIA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEZ,OADQ;AAEjBa,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBR,MAAAA,SAAS,EAAES,IAAI,CAACC,MAAL,KAAgB,GAHV;AAIjBC,MAAAA,EAAE,EAAEpB,KAAK,CAACqB,MAAN,GAAe;AAJF,KAAnB;AAOApB,IAAAA,QAAQ,CAACD,KAAK,CAACsB,MAAN,CAAaT,UAAb,CAAD,CAAR;AACAV,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAXD;;AAYF,QAAMoB,gBAAgB,GAAEZ,KAAD,IAAS;AAC9Ba,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACe,MAAN,CAAaC,KAAzB;AACAxB,IAAAA,UAAU,CAACQ,KAAK,CAACe,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD;;AAIE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMtB,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA,4BACQA,OAAO,GAAG,WAAH,GAAiB,KADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAOE;AAAA,gBACCE,WAAW,CAACsB,GAAZ,CAAgBpB,IAAI,iBACjB,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAEA;AAA1B,SAAWA,IAAI,CAACY,EAAhB;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA,YAPF,eAYE;AAAM,MAAA,QAAQ,EAAEV,OAAhB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAER,OAAd;AAAwB,QAAA,QAAQ,EAAEqB;AAAlC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA7CD;;GAAMzB,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["\nimport React, { useState } from 'react'\n\n// const App = () => {\n//   const [ persons, setPersons ] = useState([\n//     { name: 'Arto Hellas' , id:1}\n//   ]) \n//   const [ newName, setNewName ] = useState('')\n//   const handleNoteChange=(event)=>{\n//     console.log(event.target.value)\n//     setNewName(event.target.value)\n//   }\n//   const addName = (event) => {\n//         event.preventDefault()\n//         const nameObject = {\n//           name: newName,\n//           id: persons.length + 1,\n//         }\n      \n//         setPersons(persons.concat(nameObject))\n//         setNewName('')\n//        }\n//   return (\n//     <div>\n//       <h2>Phonebook</h2>\n \n//       <form onSubmit={addName} >\n//         <div>\n//           name: <input  onChange={handleNoteChange}/>\n//         </div>\n//         <div>\n//           <button type=\"submit\">add</button>\n//         </div>\n//       </form>\n//       <h2>Numbers</h2>\n//       <ul>\n//         {persons.map(person =><li key={person.id}>{person.name}</li>)}\n//       </ul>\n//     </div>\n//   )\n// }\n\n//export default App\n\nconst App = (props) => {\n  //console.log(props.notes)\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n  \n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    }\n  \n    setNotes(notes.concat(noteObject))\n    setNewNote('')\n  }\nconst handleNoteChange=(event)=>{\n  console.log(event.target.value)\n  setNewNote(event.target.value)\n}\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>\n      <ul>\n      {notesToShow.map(note =>\n          <Note key={note.id} note={note} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote}  onChange={handleNoteChange}/>\n        <button type=\"submit\" >save</button>\n      </form>   \n    </div>\n  )\n}\nexport default App"]},"metadata":{},"sourceType":"module"}